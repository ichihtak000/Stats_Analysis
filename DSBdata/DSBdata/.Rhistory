kakei <- read.csv("kakei201709_l18.csv", header=TRUE, sep=",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
kakei <- read.csv("kakei201709_l18.csv", header=TRUE, sep=",")
kakei <- read.csv("kakei201709_l18.csv", header=TRUE, sep=",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
kakei <- read.csv("kakei201709_l18.csv", header=TRUE, sep=",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
kakei <- read.csv("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata/kakei201709_l18.csv", header=TRUE, sep=",")
plot(kakei$CONS1~kakei$INC1, xlab="INC", ylab="CONS",
ylim=c(0,60), xlim=c(0,250))
plot(kakei$CONS1~kakei$INC1, xlab="INC", ylab="CONS",
ylim=c(0,60), xlim=c(0,250))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
kakei <- read.csv("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata/kakei201709_l18.csv", header=TRUE, sep=",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
kakei <- read.csv("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata/kakei201709_l18.csv", header=TRUE, sep=",")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
library(ggplot2)
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point()
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab(Consumption)
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("Income") + ylab("Consumption")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("Income (10000 yen)") + ylab("Consumption (10000 yen)")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("収入 (万円)") + ylab("Consumption (10000 yen)")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("Income (10000 yen)") + ylab("Consumption (10000 yen)")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
kakei <- read.csv("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata/kakei201709_l18.csv", header=TRUE, sep=",")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("Income (10000 yen)") + ylab("Consumption (10000 yen)")
kakei <- read.csv("kakei201709_l18.csv", header=TRUE, sep=",")
kakei.lm1 <- lm(CONS1~INC1, data=kakei)
summary(kakei.lm1)
kakei.lm1 <- lm(CONS1~INC1, data=kakei)
summary(kakei.lm1)
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000)) +
geom_point() + xlab("Income (10000 yen)") + ylab("Consumption (10000 yen)")
g + geom_smooth(method = "lm")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("Income (10000 yen)") + ylab("Consumption (1000 yen)")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000)) +
geom_point() + xlab("Income (1000 yen)") + ylab("Consumption (10000 yen)")
g + geom_smooth(method = "lm")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS/10000))
g + geom_point() + xlab("Income (1000 yen)") + ylab("Consumption (10000 yen)")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
kakei.lm2 <- lm(CONS1~INC1+WORK, data=kakei)
summary(kakei.lm2)
kakei.lm1 <- lm(CONS1~INC1, data=kakei)
summary(kakei.lm1)
plot(kakei[,4:6])
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS1))
g + geom_point() + xlab("Income (1000 yen)") + ylab("Consumption (10000 yen)")
g <- ggplot2::ggplot(kakei, aes(x=INC1, y=CONS1)) +
geom_point() + xlab("Income (1000 yen)") + ylab("Consumption (10000 yen)")
g + geom_smooth(method = "lm")
kakei.lm1 <- lm(CONS1~INC1, data=kakei)
summary(kakei.lm1)
kakei.lm2 <- lm(CONS1~INC1+WORK, data=kakei)
summary(kakei.lm2)
kakei.lm3 <- lm(CONS1~WORK, data=kakei)
summary(kakei.lm3)
z.kakei <- scale(kakei)
g <- ggplot2::ggplot(z.kakei, aes(x=INC1, y=CONS1))
g + geom_point() + xlab("Income") + ylab("Consumption")
z.kakei <- scale(kakei)
g <- ggplot2::ggplot(z.kakei, aes(x=INC1, y=CONS1))
g + geom_point() + xlab("Income") + ylab("Consumption")
z.kakei
z.kakei <- scale(kakei)
plot(z.kakei[,5]~z.kakei[,4])
z.kakei <- scale(kakei)
ggplot2::ggplot(z.kakei, aes(x=INC1, y=CONS1))
z.kakei <- as.data.frame(scale(kakei))
ggplot2::ggplot(z.kakei, aes(x=INC1, y=CONS1))
z.kakei <- as.data.frame(scale(kakei))
kakei.lm4 <- lm(z.kakei[,5]~z.kakei[,4]+z.kakei[,6])
summary(kakei.lm4)
AIC(kakei.lm1, kakei.lm2, kakei.lm3)
BIC(kakei.lm1, kakei.lm2, kakei.lm3)
plot(kakei.lm2)
plot(kakei[,4:6])
plot(kakei.lm2)
plot(kakei[,4:6])
plot(kakei.lm2)
plot(kakei[,4:6])
plot(kakei.lm2)
install.packages("car")
library(car)
car::vif(kakei.lm2)
install.packages("car")
library(car)
car::vif(kakei.lm2)
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
install.packages("car")
library(car)
car::vif(kakei.lm2)
library(car)
car::vif(kakei.lm2)
install.packages(c("betareg", "brms", "devtools", "formattable", "gamlss", "gamlss.dist", "gamlss.util", "ggeffects", "metRology", "retimes", "rtdists", "tweedie"))
install.packages("titanic")
library(titanic)
summary(titanic_train)
nrow(titanic_train)
summary(TitanicSurvival)
glimpse(alldata)
install.packages(c("caret", "ggthemes", "makedummies"))
install.packages(c("caret", "ggthemes", "makedummies"))
install.packages(c("caret", "ggthemes", "makedummies"))
install.packages(c("caret", "ggthemes", "makedummies"))
install.packages(c("caret", "ggthemes", "makedummies"))
glimpse(titanic_train)
library(tibble)
glimpse(titanic_train)
summary(titanic_train)
library(titanic)
summary(titanic_train)
glimpse(titanic_train)
ttrain <- titanic_train
glimpse(ttrain)
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train <- sapply(ttrain, function(y) sum(is.na(y)))
na_count_train
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
train <- read.table("train.csv", sep=",", na.strings = " ")
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
head(train)
summary(train)
train <- read.csv("train.csv", stringsAsFactors = F,na.strings=(c("NA", "")))
head(train)
summary(train)
train <- read.csv("train.csv", stringsAsFactors = F,na.strings=(c("NA", " ")))
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
train <- read.csv("train.csv", stringsAsFactors = F,na.strings=(c("NA", "")))
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
train$Pclass <- as.factor(train$Pclass)
train$Sex <- as.factor(train$Sex)
train$Survived <- factor(train$Survived,levels=c(0,1),labels=c("Died","Survived"))
ggplot(train, aes(Age, fill = Survived)) +
geom_histogram() +
theme_igray() +
xlab("Age") +
scale_fill_discrete(name = "Survived") +
ggtitle("Age vs Survived")
ggplot2::ggplot(train, aes(Age, fill = Survived)) +
geom_histogram() +
theme_igray() +
xlab("Age") +
scale_fill_discrete(name = "Survived") +
ggtitle("Age vs Survived")
ggplot2::ggplot(train, aes(Age, fill = Survived))
ggplot2::ggplot(train, ggplot2::aes(Age, fill = Survived)) +
geom_histogram() +
theme_igray() +
xlab("Age") +
scale_fill_discrete(name = "Survived") +
ggtitle("Age vs Survived")
ggplot2::ggplot(train, ggplot2::aes(Age, fill = Survived)) +
ggplot2::geom_histogram() +
ggplot2::theme_igray() +
ggplot2::xlab("Age") +
ggplot2::scale_fill_discrete(name = "Survived") +
ggplot2::ggtitle("Age vs Survived")
drop_na(train)
dplyr::drop_na(train) %>% skim()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
needs::prioritize(magrittr)
dplyr::drop_na(train) %>% skim()
drop_na(train) %>% skim()
dplyr::drop_na(train)
tidyr::drop_na(train)
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
train2 <- na.omit(train)
summary(train2)
train$Survived <- factor(train$Survived,levels=c(0,1),labels=c("Died","Survived"))
summary(train)
train <- read.csv("train.csv", stringsAsFactors = F,na.strings=(c("NA", "")))
summary(train)
train$Pclass <- as.factor(train$Pclass)
train$Sex <- as.factor(train$Sex)
train$Survived <- as.factor(train$Survived)
train2 <- na.omit(train)
summary(train2)
head(train2)
train$Survived <- factor(train$Survived,levels=c(0,1),labels=c("Died","Survived"))
train2 <- na.omit(train)
summary(train2)
head(train2)
train2.d <- train2 %>% select(Survived, Pclass,Sex, Embarked)
train2.d <- train2 %>% dplyr::select(Survived, Pclass,Sex, Embarked)
train2.nd <- train2 %>% dplyr::select(PassengerId, Name, Age, SibSp, Parch, Tichet, Fare, Cabin)
train2.nd <- train2 %>% dplyr::select(PassengerId, Name, Age, SibSp, Parch, Ticket, Fare, Cabin)
train$CabinLetter = factor(substr(train$Cabin, 1, 1))
train$CabinNumber = factor(as.numeric(substr(train$Cabin, 2, 4)))
train$Title = factor(gsub('(.*, )|(\\..*)', '', train$Name))
train$Surname <- factor(sapply(train$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
head(train)
train$CabinNumber = factor(train$CabinNumber)
head(train)
train <- read.csv("train.csv", stringsAsFactors = F,na.strings=(c("NA", "")))
head(train)
summary(train)
#'Pclass', 'Sex', 'Survived'をファクター型へ変換する
train$Pclass <- as.factor(train$Pclass)
train$Sex <- as.factor(train$Sex)
train$Survived <- as.factor(train$Survived)
train$CabinLetter = factor(substr(train$Cabin, 1, 1))
train$CabinNumber = factor(as.numeric(substr(train$Cabin, 2, 4)))
train$Title = factor(gsub('(.*, )|(\\..*)', '', train$Name))
train$Surname <- factor(sapply(train$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train$CabinNumber = factor(train$CabinNumber)
head(train)
setwd("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata")
train <- read.csv("train.csv", stringsAsFactors = F,na.strings=(c("NA", "")))
head(train)
summary(train)
# 欠損値の把握
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
train2 <- na.omit(train)
summary(train2)
head(train2)
train2$Survived <- factor(train2$Survived)
train2 <- na.omit(train)
summary(train2)
head(train2)
summary(train2)
train2$Survived <- as.factor(train2$Survived)
summary(train2)
train2$Pclass <- as.factor(train2$Pclass)
summary(train2)
train2$Survived <- factor(train2$Survived)
summary(train2)
train2 <- na.omit(train)
summary(train2)
head(train2)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
summary(train2)
rm(train2)
train2 <- na.omit(train)
summary(train2)
head(train2)
#'Pclass', 'Sex', 'Survived'をファクター型へ変換する
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
summary(train2)
glm1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+BabinLetter+Title,
data=train2, family=binominal(link='logit'))
glm1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+BabinLetter+Title,
data=train2, family=binomial(link='logit'))
glm1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='logit'))
summary(glm1)
car::vif(glm1)
glm2 <- glm(Survived~Pclass+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='logit'))
summary(glm2)
glm.logit1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='logit'))
summary(glm.logit1)
# VIFの確認
car::vif(glm.logit1)
glm.logit2 <- glm(Survived~Pclass+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='logit'))
summary(glm.logit2)
glm.logit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='logit'))
summary(glm.logit2)
glm.probit1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='probit'))
summary(glm.probit1)
glm.probit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='probit'))
summary(glm.probit2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
head(train)
summary(train)
head(train)
summary(train)
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
train2 <- na.omit(train)
summary(train2)
head(train2)
kakei <- read.csv("~/Google Drive File Stream/マイドライブ/Lecture & Excecise/2019_204_秋・統計解析/授業資料Rmd_20190809/DSBdata/train.csv", stringsAsFactors = F,na.strings=(c("NA", "")))
head(train)
summary(train)
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
summary(train2)
head(train2)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
summary(train2)
head(train2)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
summary(train2)
glm.logit1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='logit'))
summary(glm.logit1)
car::vif(glm.logit1)
glm.logit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='logit'))
summary(glm.logit2)
glm.probit1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='probit'))
summary(glm.probit1)
glm.probit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='probit'))
summary(glm.probit2)
exp(coef(glm.logit2))
exp(cofint(glm.logit2))
exp(confint(glm.logit2))
library(broom)
broom::tidy(glm.logit2, , conf.int = TRUE, exponentiate = TRUE)
predict(glm.logit2, type="response")
train3 <- train2 %>%
mutate(predict=predict(glm.logit2, type="response"),
survive=if_else(predict > 0.5, 1, 0))
train3 <- train2 %>%
dplyr::mutate(predict=predict(glm.logit2, type="response"),
survive=if_else(predict > 0.5, 1, 0))
train3 <- train2 %>%
dplyr::mutate(predict=predict(glm.logit2, type="response"),
survive=dplyr::if_else(predict > 0.5, 1, 0))
sum(train3$Survived == train3$survive)/nrow(train3)
train3 <- train2 %>%
dplyr::mutate(predict=predict(glm.logit2, type="response"),
survive=dplyr::if_else(predict > 0.5, 1, 0))
sum(train3$Survived == train3$survive)/nrow(train3)
predict(glm.logit2, type="response")
train3 <- train2 %>%
dplyr::mutate(predict=predict(glm.logit2, type="response"),
survive=dplyr::if_else(predict > 0.5, 1, 0))
sum(train3$Survived == train3$survive)/nrow(train3)*100
glm.cloglog1 <-glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial('cloglog'))
summary(glm.cloglog1)
glm.cloglog2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='cloglog'))
summary(glm.probit2)
glm.probit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='probit'))
summary(glm.probit2)
glm.probit1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='probit'))
summary(glm.probit1)
glm.probit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='probit'))
summary(glm.probit2)
glm.cloglog2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='cloglog'))
summary(glm.cloglog2)
library(datasets)
data <- warpbreaks
summary(data)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(error = TRUE)
head(train)
summary(train)
na_count_train <- sapply(train, function(y) sum(is.na(y)))
na_count_train
summary(train2)
head(train2)
train2$Survived <- factor(train2$Survived)
train2$Pclass <- factor(train2$Pclass)
train2$Sex <- factor(train2$Sex)
train2$CabinLetter = factor(substr(train2$Cabin, 1, 1))
train2$CabinNumber = factor(as.numeric(substr(train2$Cabin, 2, 4)))
train2$Title = factor(gsub('(.*, )|(\\..*)', '', train2$Name))
train2$Surname <- factor(sapply(train2$Name, function(x){x=as.character(x); strsplit(x, split = '[,.]')[[1]][1];}))
train2$CabinNumber = factor(train2$CabinNumber)
glm.logit1 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+CabinLetter+Title,
data=train2, family=binomial(link='logit'))
summary(glm.logit1)
car::vif(glm.logit1)
glm.logit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='logit'))
summary(glm.logit2)
exp(coef(glm.logit2))
exp(confint(glm.logit2))
library(broom)
broom::tidy(glm.logit2, conf.int = TRUE, exponentiate = TRUE)
predict(glm.logit2, type="response")
train3 <- train2 %>%
dplyr::mutate(predict=predict(glm.logit2, type="response"),
survive=dplyr::if_else(predict > 0.5, 1, 0))
sum(train3$Survived == train3$survive)/nrow(train3)*100
glm.probit2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='probit'))
summary(glm.probit2)
glm.cloglog2 <- glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,
data=train2, family=binomial(link='cloglog'))
summary(glm.cloglog2)
g <- ggplot2::ggplot(data, aes(x=breaks)) +
geom_histgram()
plot(g)
g <- ggplot2::ggplot(warpbreaks, ggplot2::aes(x=breaks)) +
geom_histgram()
plot(g)
ggplot2::ggplot(warpbreaks, ggplot2::aes(x=breaks)) +
ggplot2::geom_histgram()
ggplot2::ggplot(warpbreaks, ggplot2::aes(x=breaks)) +
ggplot2::geom_histogram()
ggplot2::ggplot(warpbreaks, ggplot2::aes(x=breaks)) +
geom_histogram()
