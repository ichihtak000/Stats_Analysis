star.cutoffs = NA, omit.table.layout = 'n',
align = TRUE)
NMES1988 %>%
mutate(predict = predict(nmes.zip, type = "response", newdata = .)) %>%
ggplot(aes(visits, predict)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed")
c(obs=sum(NMES1988$visits==0), zip=sum(predict(nmes.zip,type="prob")[,1]))
star.cutoffs = NA
star.cutoffs = NA
nmes.zip <- zeroinfl(formula,
data=NMES1988,
dist="poisson")
stargazer(nmes.zip, type = "text", style = "all2", ci = TRUE,
star.cutoffs = NA, omit.table.layout = 'n',
align = TRUE)
NMES1988 %>%
mutate(predict = predict(nmes.zip, type = "response", newdata = .)) %>%
ggplot(aes(visits, predict)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed")
c(obs=sum(NMES1988$visits==0), zip=sum(predict(nmes.zip,type="prob")[,1]))
nmes.zinb <- zeroinfl(formula,
data=NMES1988,
dist="negbin")
stargazer(nmes.zinb, type = "text", style = "all2", ci = TRUE,
star.cutoffs = NA, omit.table.layout = 'n',
align = TRUE)
NMES1988 %>%
mutate(predict = predict(nmes.zinb, type = "response", newdata = .)) %>%
ggplot(aes(visits, predict)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed")
c(obs=sum(NMES1988$visits==0), zinb=sum(predict(nmes.zinb,type="prob")[,1]))
stargazer(nmes.poi, nmes.nb, nmes.hpoi, nmes.hnb, nmes.zip, nmes.zinb,
type = "text", style = "all2", ci = TRUE,
star.cutoffs = NA, omit.table.layout = 'n',
align = TRUE)
source('~/Keio/freshman/Stats_Analysis/R/Project/7.R', echo=TRUE)
install.packages("pscl")
install.packages("GGally")
install.packages("tidyr")
install.packages("dplyr")
install.packages("stargazer")
install.packages("GGally")
source('~/Keio/freshman/Stats_Analysis/R/Project/6.R', echo=TRUE)
data<-c(7,5,6,3,8,9,5,8,3,7)
data
mean(data)
var = var(data)*length(data)/(length(data)-1)
var
sqrt(var)
var(data)
var(data)*10/9
var = var(data)*(length(data)-1)/(length(data))
var
sqrt(var)
x<-c(100,200,300,400,500,600,700,800,900,1000)
y<-c(169,255,320,399,455,530,511,719,791,818)
lsgit(x,y)
lsfit(x,y)
lsfit(x,y)$coefficients
a<-lsfit(x,y)$coefficients[1]
a
b<-lsfit(x,y)$coefficients[2]
b
Y<-a+b*x
Y
var(Y)/var(y)
plot(x,y,type="n",xlim=c(0,1250),ylim=c(0,1250))
points(x,y,type="p")
abline(ab)
line(ab)
abline(a,b)
plot(x,y,type="n",xlim=c(0,1250),ylim=c(0,1250))
points(x,y,type="b")
b1<-lsfit(x,y)$coefficients[2]
b1
b2<-var(x,y)/var(x)
b2
a1<-lsfit(x,y)$coefficients[1]
a1
a2
a2<-mean(y)-b2*mean(x)
a2
cor(y,Y)^2
var(Y)/var(y)
lsfit(x2,y2)
x2<-log(x)
y2<-log(y)
lsfit(x2,y2)
lsfit(x2,y2)$coefficients
a2<-lsfit(x2,y2)$coefficients[1]
a2
a3<-exp(a2)
a3
b2<-lsfit(x2,y2)$coefficients
b2
cor(x,y)
Y2<-a3*x^b2
Y2
var(Y2)/var(y)
x_all<-c(0:1300)
Y2<-a3*x^b2
var(Y2)/var(y)
var(y)
var(Y2)
x_all<-(0:1300)
Y2_all<-a3*x_all^b2
x_all<-(0:1300)
Y2_all<-a3*x_all^b2
source('~/Keio/freshman/知覚認知/R/2.R', encoding = 'SHIFT-JIS', echo=TRUE)
source('~/Keio/freshman/知覚認知/R/2.R', echo=TRUE)
plot(x,y,type="n",xlim=c(0,1250),ylim=c(0,1250))
points(x,y,type="p")
points(x_all,Y2_all,type="l")
b2<-lsfit(x2,y2)$coefficients
Y2<-a3*x^b2
Y2_all<-a3*x_all^b2
Y2_all<-(a3)*x_all^b2
Y2_all<-(a3)*x_all^b2
Y2_allY2<-a3*x^b2var(Y2)/var(y)
Y2_all<-(a3)*x_all^b2
x<-c(100,200,300,400,500,600,700,800,900,1000)
x
y<-c(169,255,320,399,455,530,511,719,791,818)
y
z<-c(8,7,6,3,9,8,4,10,5,6)
z
lsfit(cbind(x,z),y)
install.packages("ggplot2")
install.packages("AER")
install.packages("MASS")
install.packages("pscl")
install.packages("GGally")
install.packages("tidyr")
install.packages("dplyr")
install.packages("stargazer")
library(ggplot2)
library(AER)
library(MASS)
library(pscl)
library(GGally)
library(tidyr)
library(dplyr)
library(stargazer)
data("NMES1988")
summary(NMES1988)
NMES1988 %>%
summarise(mean = mean(visits), var = var(visits), ratio = var(visits) / mean(visits))
ggplot(NMES1988, aes(visits)) +
geom_histogram()
NMES1988 %>%
dplyr::select(visits, hospital, health, age, income) %>%
ggpairs()
rm(npub)
rm(var_list)
rm(dat)
rm(data)
source('~/Keio/freshman/Stats_Analysis/R/Project/8.R', echo=TRUE)
install.packages("dplyr")
install.packages("tidyr")
library(ggplot2)
library(GGally)
library(betareg)
library(Zelig)
library(lme4)
library(gamlss)
library(dplyr)
library(tidyr)
library(stargazer)
library(stargazer)
library(ggplot2)
library(GGally)
library(betareg)
library(Zelig)
library(lme4)
library(gamlss)
library(dplyr)
library(tidyr)
library(stargazer)
data("GasolineYield", package = "betareg")
summary(GasolineYield)
ggplot(GasolineYield, aes(yield)) +
geom_histogram()
?GasolineYield
ggplot(GasolineYield, aes(temp)) +
geom_histogram()
GasolineYield %>%
dplyr::select(yield, temp, batch) %>%
ggpairs()
gs.beta <- betareg(yield ~ batch + temp, data = GasolineYield)
View(gs.beta)
stargazer(gs.beta, type = "text", style = "all2", ci = TRUE,
star.cutoffs = NA, omit.table.layout = 'n',
align = TRUE)
GasolineYield %>%
mutate(predict = predict(gs.beta, type = "response", newdata = .)) %>%
ggplot(aes(yield, predict)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed")
getwd()
setwd(C;//Users/Takumi/Documents/freshman/Stats_Analysis/R)
setwd(C://Users/Takumi/Documents/freshman/Stats_Analysis/R)
setwd(Users/Takumi/Documents/freshman/Stats_Analysis/R)
setwd(C:/Users/Takumi/Documents/freshman/Stats_Analysis/R)
setwd("C:/Users/Takumi/Documents/freshman/Stats_Analysis/R")
setwd("C:/Users/Takumi/Documents/Keio/freshman/Stats_Analysis/R")
getwd)()
getwd)()
getwd()
setwd("C:/Users/Takumi/Documents/Keio/freshman/Stats_Analysis/R/Project")
data(coalition, package = "Zelig")
summary(coalition)
ggplot(coalition, aes(duration, ..density..)) +
geom_histogram() +
geom_density(fill = "lightblue", alpha = 0.5)
ggplot(coalition, aes(fract, ..density..)) +
geom_histogram() +
geom_density(fill = "lightblue", alpha = 0.5)
coalition %>%
dplyr::select(duration, fract, numst2) %>%
mutate_at(vars(numst2), as.factor) %>%
ggpairs()
coa.gam <- glm(duration ~ fract + numst2,
data=coalition,
family=Gamma)
stargazer(coa.gam, type = "text", style = "all2", ci = TRUE,
star.cutoffs = NA, omit.table.layout = 'n',
align = TRUE)
coalition %>%
mutate(predict = predict(coa.gam, type = "response", newdata = .)) %>%
ggplot(aes(duration, predict)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed")
norm    = rnorm(1000, mean = 10, sd = 1),
exp     = rexp(1000,  rate = 0.5),
exGauss = rexGAUS(2000, mu = 10, sigma = 1, nu = 1/0.5)) %>%
mutate(norm_exp = norm + exp) %>%
gather() %>%
transform(key = factor(key,
levels = c("norm","exp","norm_exp","exGauss")))
ggplot(df, aes(value, fill = key)) +
geom_histogram() +
facet_wrap(~key)
df <- data.frame(
norm    = rnorm(1000, mean = 10, sd = 1),
exp     = rexp(1000,  rate = 0.5),
exGauss = rexGAUS(2000, mu = 10, sigma = 1, nu = 1/0.5)) %>%
mutate(norm_exp = norm + exp) %>%
gather() %>%
transform(key = factor(key,
levels = c("norm","exp","norm_exp","exGauss")))
ggplot(df, aes(value, fill = key)) +
geom_histogram() +
facet_wrap(~key)
data(sleepstudy, package = "lme4")
summary(sleepstudy)
ggplot(sleepstudy, aes(Reaction, ..density..)) +
geom_histogram() +
geom_density(fill = "lightblue", alpha = 0.5)
ggplot(sleepstudy, aes(Days, Reaction)) +
geom_point()
sleep.model <- gamlss(Reaction ~ Days,
data=sleepstudy,
family=exGAUS,
mu.fix=FALSE,
sigma.fix = FALSE,
nu.fix = FALSE)
summary(sleep.model)
sleepstudy %>%
mutate(predict = predict(sleep.model, type = "response", newdata = .)) %>%
ggplot(aes(Reaction, predict)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed")
source('~/Keio/freshman/Stats_Analysis/R/Project/13.R', echo=TRUE)
Fo1 <- c("Faculty", "of")
PM1 <- c("Policy", "Management")
EI1 <- c("Environment", "and", "Information", "Studies")
str_c("Keio","SFC",sep="")
str_c(PM1,collapse="")
str_c("Keio","SFC",sep=" ")
str_c(PM1,collapse=" ")
Fo2 <- str_c(Fo1, collapse = " ")
PM2 <- str_c(PM1, collapse = " ")
EI2 <- str_c(EI1, collapse = " ")
string <- c(Fo2, PM2, EI2)
rm(kakei)
rm(kakei.lm1)
str_c(Fo2,c(PM2,EI2),sep="")
str_c(Fo2,c(PM2,EI2),sep=" ")
str_split(string,pattern = " ")
getwd()
str_split(string,pattern= " ", simplify=TRUE)
str_split(string,pattern= " ", simplify=TRUE,n=3)
str_detect(PM1,pattern="o")
str_detect(PM1,pattern="o",negate=TRUE)
str_detect(EI1,pattern="n$")
str_subset(EI1,pattern="en")
str_replace(EI1, pattern="n",replacement="*")
str_replace_all(EI1, pattern="n", replacement="*")
str_extract(EI1, pattern="n")
str_extract(EI1, pattern="en")
str_extract_all(EI1,pattern="en|o",simplify=TRUE)
str_sub(EI1,start=1,end=3)
str_sub(EI1,start=-3,end=-1)
str_locate(string,pattern=" ")
str_length(EI1)
train3 <- train2 %>%
mutate_at(vars(Survived, Pclass, Sex, Embarked), as.factor) %>%
mutate(CabinLetter = str_sub(Cabin,
start = 1,
end = 1) %>%
as.factor) %>%
mutate(CabinNumber = str_sub(Cabin,
start = 2,
end = -1) %>%
as.numeric %>%
as.factor) %>%
mutate(Title = str_sub(Name,
start = str_locate(Name, ",")[,1] + 2,
end = str_locate(Name, "\\.")[,1] - 1) %>%
as.factor) %>%
mutate(Surname = str_sub(Name,
start = 1,
end = str_locate(Name, ",")[,1] - 1) %>%
as.factor)
num = 0
for (i in 1:100) {
num <- num + i
}
num
system.time({
num=0
for(i in 1:1000)
num<-num+i
})
system.time(sum(1:1000))
system.time({
num=0
for(i in 1:1000)
num<-num+i
})
system.time(sum(1:1000))
s<-0
i<-1
while(s<1000){
s<-s+i
i<-i+1
}
s
list(1,2,3)%>%
purrr::map(exp)
11<-iris %>%
group_split(Species)
l1<-iris %>%
group_split(Species)
l2<-iris %>%
split(.$Species)
l1 &>&
map(summary)
l1 >%>%
map(summary)
l1 %>%
map(summary)
l1 %>%
map(~lm(Petal.Width ~Petal.Length,data=.x))
list1 <- iris %>%
split(.$Species) %>%
map(select, Petal.Length) %>%
map(mutate, No = row_number())
list2 <- iris %>%
split(.$Species) %>%
map(select, Petal.Width) %>%
map(mutate, No = row_number())
res <- map2(list1, list2, left_join, by = "No")
res
res2 <- map2(list1, list2,
left_join, by = "No") %>%
map_dfr(select, -No, .id = "Species") %>%
mutate_at(vars(Species), as.factor) %>%
select(Petal.Length, Petal.Width, Species)
res2
iris %>%
select(Petal.Length, Petal.Width, Species) %>%
all.equal(res2)
list.files
list.files(pattern=".R")
list.files(pattern=".R",full.names = TRUE)
starwars
data <-starwars
View(data)
table(starwars)
table(starwars$homeworld)
list <-
data <-starwars %<%
mutate(height_diff = )
table(starwars$films)
table(starwars$homeworld)
a <- starwars$films
a
summary(a)
list <-
data <-starwars %<%
filter(homeworld,contains("Return of the Jedi"))
library(tibble)
library(dplyr)
library(purrr)
library(ggplot2)
list <-
data <-starwars %<%
filter(homeworld,contains("Return of the Jedi"))
library(ggplot2)
library(tibble)
library(dplyr)
library(purrr)
library(stringr)
list <-
data <-starwars %>%
filter(homeworld,contains("Return of the Jedi"))
list <-
data <-starwars %>%
filter(homeworld="Return of the Jedi")
list <-
data <-starwars %>%
filter(homeworld =="Return of the Jedi")
hw <- starwars %>%
group_split(homeworld)
hw
data <-starwars
hw <- starwars %>%
group_split(.$homeworld)
hw
hw %>%
map(mean)
warnings()
hw %>%
map(mean(height))
hw %>%
map(mean(hw$height))
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height))
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter,str_detect(films,pattern="Return")) %>%
map_dfr(select,name,height_diff,films)
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter,str_detect(films,pattern="Return")) %>%
map_dfr(select,name,height_diff,films)
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter,str_detect(films,pattern="Return")) %>%
map_dfr(select,name,height_diff,films)
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter,str_detect(films,pattern="Return")) %>%
map_dfr(select,name,height_diff,films)
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height))
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter,str_detect(films,pattern="Return"))
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter, str_detect(films,pattern="R"))
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter, str_detect(films,pattern="Return"))
map_dfr(select,name,height_diff,films)
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter, str_detect(films,pattern="Return")) %>%
map_dfr(select,name,height_diff,films)
warnings()
library(tibble)
library(dplyr)
library(purrr)
library(stringr)
library(ggplot2)
data <-starwars %>%
group_split(homeworld) %>%
map(mutate, height_diff = height -mean(height)) %>%
map(filter, str_detect(films,pattern="Return")) %>%
map_dfr(select,name,height_diff,films)
write.csv(data, "71975110_ICHIHASHI.csv",
quote=FALSE, row.names=FALSE)
write.csv(data, "71975110_ICHIHASHI_13.csv",
quote=FALSE, row.names=FALSE)
toString(output$films)
toString(films)
toString(data$films)
write.csv(data, "71975110_ICHIHASHI_13.csv",
quote=FALSE, row.names=FALSE)
data$films <- vapply(data$films, paste, collapse = ", ", character(1L))
write.csv(data, "71975110_ICHIHASHI_13.csv",
quote=FALSE, row.names=FALSE)
class(data$name)
class(data$films)
class(data$height_diff)
write.csv(data, "71975110_ICHIHASHI_13.csv",
quote=FALSE, row.names=FALSE)
